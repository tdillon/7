{"name":"7","tagline":"A seven segment display geometry library.","body":"### Demo\r\nVisit http://tdillon.github.io/7/demo.html for a demo of what information this library can produce.\r\n\r\n### Installation\r\nYou can use npm, jspm, or directly link the files as you see fit.\r\n\r\n```shell\r\nnpm i seven-segment\r\n```\r\n\r\nAfter you have the library, import it.\r\n\r\n```javascript\r\nimport {Seven} from 'seven-segment/7';\r\n```\r\n\r\n### Basic options\r\nThe default options give you a quintessential seven segment.\r\n\r\n```javascript\r\nvar x = new Seven();\r\n```\r\n\r\n### Configuration Parameter\r\nYou can optionally pass a configuration object to the constructor.  Each property is optional.\r\n\r\n```javascript\r\n//import Digit if you want access to the enum for setting the digit type.\r\nimport {Seven, Digit} from 'seven-segment/7';\r\n\r\nvar x = new Seven({segmentLength: 10, angle: 0, ratioLtoW: 2, ratioLtoS: .5, digit: Digit.TWO});\r\n```\r\n\r\n### Setters\r\nYou can configure the `Seven` by using setters after the object has been instantiated.\r\n\r\n```javascript\r\nvar x = new Seven();\r\nx.segmentLength = 20;\r\nx.angle = -25;\r\nx.ratioLtoW = 4;\r\nx.ratioLtoS = 5;\r\nx.digit = Digit.SIX;\r\n```\r\n\r\n### Getters\r\nEach of the configuration properties as well as `height` and `width` are getters.\r\n\r\n```javascript\r\nvar x = new Seven();\r\nconsole.log(x.height, x.width, x.segmentLength, x.angle, x.ratioLtoW, x.ratioLtoS, Digit[x.digit]);\r\n```\r\n\r\n### Exceptions\r\nSetting the configuration properties to invalid values will cause an exception to be thrown.  All properties expect a number, except for the digit property which expects a member of the Digit enum.  Passing a string that can be converted to a number may work.  Objects, nulls, and other 'non-numeric' values will throw exceptions.  Setting a property to a number which would produce bad geometry will also throw an exception.  You should wrap construction and property setters in try/catches if you are unsure of the validity of the settings.\r\n\r\n```javascript\r\n//constructor throws an exception\r\nvar x = new Seven({angle: 'foo'});  //ERROR\r\n\r\n//setting a property throws an exception\r\nvar x = new Seven();\r\nx.angle = 89;  //ERROR, too sharp an angle produces bad geometry\r\n```\r\n\r\n### Geometry\r\nFinally, we've configured our `Seven` how we want it, now we can access the geometry.\r\n\r\n```javascript\r\nvar x = new Seven();\r\n\r\nfor (let s of x.segments) {  //Access the segments A-G\r\n  //'on' specifies if the segment is used for the 'digit' specified\r\n  if (s.on) {\r\n    for (let p of s.points) {  //each segment has a 'point' array\r\n      console.log(p.x, p.y);  //points have 'x' and 'y' properties\r\n    }\r\n  }\r\n}\r\n```\r\n","google":"UA-17166133-3","note":"Don't delete this file! It's used internally to help with page regeneration."}